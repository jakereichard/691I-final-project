import numpy as np
import matplotlib.pyplot as plt 
import seaborn as sns
import pandas as pd

# Load the dataset
data = pd.read_csv('Datasets/coral_forecast.csv', skiprows=[1])

# Group data by site
# Sites are characterised by a unique (lon, lat) combination. To group sites together, 
# we can firstly create a new column with the combined longitude and latitude.
data['lon_lat'] = list(zip(data.longitude, data.latitude))

# We can now perform groupby operations, e.g. computing mean values across all models
data = data.groupby('lon_lat').mean().drop(columns='model')

# Display a summary
data

# Create a new column with the floored latitude (removing decimals)
data['latitude_grouped'] = np.floor(data['latitude.g']).astype(int)

# Group by the new latitude column and calculate the mean for coral cover columns
mean_coral_cover = data.groupby('latitude_grouped', as_index=False).mean()

#Melt data intcoral_melted=o long format format for seaborn
mean_melt_coral=mean_coral_cover.melt(id_vars='latitude', value_vars=['coral_cover_2020','coral_cover_2100'], var_name='year', value_name='coral_cover')

# Create a new column with the floored latitude (removing decimals)
mean_melt_coral['latitude_grouped']= np.floor(mean_melt_coral['latitude']).astype(int)

#make year 2020 and 2100 category to use for hue
mean_melt_coral['year']=mean_melt_coral['year'].astype('category')

#create line plot with seaborn
dx=sns.lineplot(data=data, x='latitude', y='coral_cover_2020', marker='none')#for 2020
fx=sns.lineplot(data=data, x='latitude', y='coral_cover_2100', marker='none')#for 2100

#customize  the plot
plt.xlabel("Latitude")
plt.ylabel('Coral Cover (km^2)')
plt.title('Coral Cover as a Function of Latitude')
plt.grid(True)
plt.tight_layout()


#show plot
plt.show()
